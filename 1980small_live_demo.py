# -*- coding: utf-8 -*-
"""1980small_live_demo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-rToCmij9rShl06vqA3YJtrQKm4k7we6
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install librosa

import librosa

import matplotlib.pyplot as plt
import numpy as np
from matplotlib import cm

import os
import pandas as pd
import glob

import pickle

path = '/content/drive/My Drive/Senior/1980/ravdess/audio/speech'
lst = []

i = 0;

for subdir, dirs, files in os.walk(path):
  for file in files:
    if (i%2 == 0):
      try:
        #Load librosa array, obtain mfcss, store the file and the mcss information in a new array
        X, sample_rate = librosa.load(os.path.join(subdir,file), res_type='kaiser_fast')
        mfccs = np.mean(librosa.feature.mfcc(y=X, sr=sample_rate, n_mfcc=40).T,axis=0) 
        file = file[6:8]
        arr = mfccs, file
        lst.append(arr)
      # If the file is not valid, skip it
      except ValueError:
        continue

with open('list.pkl', 'wb') as f:
    pickle.dump(lst, f)

f = open('/content/drive/My Drive/Senior/1980/list.pkl', 'rb')

lst = pickle.load(f)

X, y = zip(*lst)

import numpy as np
X = np.asarray(X)
y = np.asarray(y)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

from sklearn.tree import DecisionTreeClassifier

dtree = DecisionTreeClassifier()

dtree.fit(X_train, y_train)

predictions = dtree.predict(X_test)

from sklearn.metrics import classification_report,confusion_matrix
print(classification_report(y_test,predictions))

!pip install shap

import shap as sp

explainer = sp.TreeExplainer(dtree, X_train)

shap_values = np.array(explainer.shap_values(X_test[0])[1])
shap_values

